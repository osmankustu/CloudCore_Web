name: CI for dev Branch status and reports

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  build-and-test:
    name: Node ${{ matrix.node-version }} - Build & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20, 22]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint check (save output)
        run: |
          mkdir -p lint/node${{ matrix.node-version }}
          npm run lint:ci > lint/node${{ matrix.node-version }}/lint-results.txt || true

      - name: Build the application
        run: npm run build:dev

      - name: Run tests (with coverage and reporters)
        env:
          NODE_VERSION: ${{ matrix.node-version }}
        run: npm run test:coverage

      - name: Organize reports
        run: |
          mkdir -p test-results/jest-stare-reports/node${{ matrix.node-version }}
          mkdir -p coverage/node${{ matrix.node-version }}
          mkdir -p lint/node${{ matrix.node-version }}
          mv test-results/jest-stare-reports/* test-results/jest-stare-reports/node${{ matrix.node-version }} || true
          mv coverage/* coverage/node${{ matrix.node-version }} || true

      - name: Upload all artifacts (jest, coverage, lint)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: results-node${{ matrix.node-version }}
          path: |
            test-results/jest-stare-reports/node${{ matrix.node-version }}
            coverage/node${{ matrix.node-version }}
            lint/node${{ matrix.node-version }}

  merge-artifacts:
    name: Merge all artifacts into one zip
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: merged-results/all-results

      - name: Archive all results into one zip
        run: |
          cd merged-results/all-results
          zip -r ../test-results.zip .

      - name: Upload single zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-results.zip
          path: merged-results/test-results.zip
